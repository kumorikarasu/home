---
- name: Get ESO AWS access key from Terraform
  shell: terraform -chdir="{{ terraform_aws_dir }}" output -raw external_secrets_operator_access_key_id
  register: eso_access_key_result
  changed_when: false
  delegate_to: localhost
  run_once: true

- name: Get ESO AWS secret key from Terraform  
  shell: terraform -chdir="{{ terraform_aws_dir }}" output -raw external_secrets_operator_secret_access_key
  register: eso_secret_key_result
  changed_when: false
  delegate_to: localhost
  run_once: true
  no_log: true

- name: Set ESO credential facts
  set_fact:
    eso_access_key: "{{ eso_access_key_result.stdout }}"
    eso_secret_key: "{{ eso_secret_key_result.stdout }}"
  no_log: true
  run_once: true

- name: Create system-external-secrets namespace
  kubernetes.core.k8s:
    name: system-external-secrets
    api_version: v1
    kind: Namespace
    state: present
  run_once: true

- name: Create ESO AWS credentials secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: aws-credentials
        namespace: system-external-secrets
      type: Opaque
      data:
        access-key-id: "{{ eso_access_key | b64encode }}"
        secret-access-key: "{{ eso_secret_key | b64encode }}"
  no_log: true
  run_once: true

- name: Verify ESO credentials secret exists
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: aws-credentials
    namespace: system-external-secrets
  register: eso_secret_check
  run_once: true

- name: Display ESO setup status
  debug:
    msg: "External Secrets Operator AWS credentials configured successfully"
  when: eso_secret_check.resources | length > 0
  run_once: true
