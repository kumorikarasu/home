# values.yaml for actions-runner-controller
# Documentation: https://actions-runner-controller.github.io/actions-runner-controller/

# Controller specific values - these are often defaults and might not need to be set
# if you install the controller separately or if it's part of a larger chart.
# For a dedicated chart for runners, you might include these.
# If actions-runner-controller is already running in your cluster, you might not need this section.
# Check the actions-runner-controller documentation for how it's best to manage its deployment.
# For now, we'll assume this chart is primarily for defining RunnerDeployments.

# GitHub App credentials are populated from secrets.enc.yaml via the SOPS plugin
# Available as .Values.kumorikarasu_github_app_* and .Values.bayoudb_github_app_*

# RunnerDeployments define the configuration for a set of runners.
# Each runner deployment is associated with an organization defined above.
runnerDeployments:
  - name: "kumorikarasu-runner"
    organization: "kumorikarasu"  # Used for secret name
    repository: "kumorikarasu/home"  # Repository-specific runner
    replicas: 1
    image: "ghcr.io/actions/actions-runner:latest"
    # Optional: Define labels for your runners
    # labels:
    #   - self-hosted
    #   - linux
    #   - x64
    # Optional: Resource requests and limits
    # resources:
    #   limits:
    #     cpu: "1"
    #     memory: "2Gi"
    #   requests:
    #     cpu: "500m"
    #     memory: "1Gi"
  
  - name: "bayoudb-runner"
    organization: "bayoudb"  # Must match a key in organizations above
    replicas: 1
    image: "ghcr.io/actions/actions-runner:latest"
    # Optional: Define labels for your runners
    # labels:
    #   - self-hosted
    #   - linux
    #   - x64
    # Optional: Resource requests and limits
    # resources:
    #   limits:
    #     cpu: "1"
    #     memory: "2Gi"
    #   requests:
    #     cpu: "500m"
    #     memory: "1Gi"

# If you are managing the actions-runner-controller deployment itself with this chart,
# you would include its configuration here. For example:
# controller:
#   syncPeriod: 60s
#   actionsRunnerImage: "ghcr.io/actions/actions-runner"
#   dockerImage: "docker.io/actionsrunner/actions-runner-controller"
#   # ... other controller settings

# For now, this values.yaml focuses on defining a RunnerDeployment, assuming
# the actions-runner-controller is or will be running in your cluster.

# Configuration for the actions-runner-controller Helm chart dependency
# These values will be passed to the subchart.
# Refer to the actions-runner-controller chart's values.yaml for all available options.
# https://github.com/actions-runner-controller/actions-runner-controller/blob/master/charts/actions-runner-controller/values.yaml
actions-runner-controller:
  # Disable CRD installation by the subchart.
  # CRDs must be installed in the cluster separately before this chart is deployed.
  crds:
    install: false
  # To override subchart values, uncomment and set them below.
  # For example, to ensure the controller image tag matches the app version of the chart dependency:
  # image:
  #   tag: v0.27.1 # Corresponds to chart 0.23.0 appVersion
  # enabled: true # If you used a condition in Chart.yaml

  # Instruct the subchart to use a specific name for its admission webhook certificate secret.
  admissionWebhooks:
    secretName: "github-runner-actions-runner-controller-serving-cert"

  # Instruct the subchart to use the secret created by this parent chart for GitHub API credentials
  # by configuring the authSecret block.
  # githubConfigSecret: "github-runner-app-credentials" # This is superseded by authSecret configuration below

  authSecret:
    enabled: true  # Enable auth secret for controller
    create: false  # Don't create it, we'll use one of our existing secrets
    name: "github-runner-kumorikarasu-credentials"  # Use kumorikarasu secret for controller auth

  # RBAC settings (usually defaults are fine)
  # rbac:
  #   create: true

  # ServiceAccount settings
  # serviceAccount:
  #   create: true
  #   name: ""

  # Metrics settings (Prometheus)
  # metrics:
  #   enabled: false
  #   port: 8080

  # Webhook server settings (for GitHub App webhooks, if you enable them later)
  # webhookServer:
  #   enabled: false
  #   port: 8080

  # Other controller settings as needed
  # syncPeriod: "1m"
  # leaderElection:
  #   enabled: true
  #   leaseDuration: "15s"
  #   renewDeadline: "10s"
  #   retryPeriod: "2s"

  # Important: Ensure the CRDs are installed. The actions-runner-controller chart
  # typically installs them. If managing CRDs separately, ensure they are applied
  # before this chart is deployed by ArgoCD.
  # crd:
  #   install: true # Default is usually true in the subchart

  # You can set the namespace for the controller if you want it different from the runners
  # namespace: actions-runner-system
  # However, if this chart deploys both, they will likely be in the same namespace
  # defined by ArgoCD for this application.
