# values.yaml for actions-runner-controller
# Documentation: https://actions-runner-controller.github.io/actions-runner-controller/

# Controller specific values - these are often defaults and might not need to be set
# if you install the controller separately or if it's part of a larger chart.
# For a dedicated chart for runners, you might include these.
# If actions-runner-controller is already running in your cluster, you might not need this section.
# Check the actions-runner-controller documentation for how it's best to manage its deployment.
# For now, we'll assume this chart is primarily for defining RunnerDeployments.

# RunnerDeployments define the configuration for a set of runners.
# You can have multiple runner deployments for different repositories or purposes.
runnerDeployments:
  - name: "personal-kumorikarasu-runner" # A descriptive name for this runner set
    replicas: 1 # Start with 1 replica, can be scaled later
    spec:
      template:
        spec:
          # For personal repositories, configure with your username.
          # The GitHub App must be installed on your account and have access to the target repositories.
          githubConfigUrl: "https://github.com/kumorikarasu"
          organization: "kumorikarasu" # Define the runner at the user/organization level

          # GitHub App Authentication details are now sourced from the secret created
          # by templates/secret.yaml using values from secrets.enc.yaml

          # Reference to the Kubernetes secret containing the GitHub App's private key,
          # App ID, and Installation ID. The name of this secret is now generated by the template.

          # Runner image - use the official one or your custom image
          image: "ghcr.io/actions/actions-runner:latest" # ARC compatible image
          # You can specify a version tag, e.g., ghcr.io/actions/actions-runner:2.317.0

          # Define labels for your runners, useful for targeting workflows
          # labels:
          #   - self-hosted
          #   - linux
          #   - x64
          #   - personal-runner

          # Define which repositories this runner can be used by.
          # If the GitHub App is installed on your account with access to all your repos,
          # runners will be registered at the user level and can pick up jobs from any repo
          # they have access to.
          # If you want to restrict this runner set to specific repositories:
          # repositoryNames:
          #   - "kumorikarasu/my-repo-1"
          #   - "kumorikarasu/my-repo-2"

          # Resource requests and limits for the runner pods
          # resources:
          #   limits:
          #     cpu: "1"
          #     memory: "2Gi"
          #   requests:
          #     cpu: "500m"
          #     memory: "1Gi"

# If you are managing the actions-runner-controller deployment itself with this chart,
# you would include its configuration here. For example:
# controller:
#   syncPeriod: 60s
#   actionsRunnerImage: "ghcr.io/actions/actions-runner"
#   dockerImage: "docker.io/actionsrunner/actions-runner-controller"
#   # ... other controller settings

# For now, this values.yaml focuses on defining a RunnerDeployment, assuming
# the actions-runner-controller is or will be running in your cluster.

# Configuration for the actions-runner-controller Helm chart dependency
# These values will be passed to the subchart.
# Refer to the actions-runner-controller chart's values.yaml for all available options.
# https://github.com/actions-runner-controller/actions-runner-controller/blob/master/charts/actions-runner-controller/values.yaml
actions-runner-controller:
  # Disable CRD installation by the subchart.
  # CRDs must be installed in the cluster separately before this chart is deployed.
  crds:
    install: false
  # To override subchart values, uncomment and set them below.
  # For example, to ensure the controller image tag matches the app version of the chart dependency:
  # image:
  #   tag: v0.27.1 # Corresponds to chart 0.23.0 appVersion
  # enabled: true # If you used a condition in Chart.yaml

  # Instruct the subchart to use a specific name for its admission webhook certificate secret.
  admissionWebhooks:
    secretName: "github-runner-actions-runner-controller-serving-cert"

  # Instruct the subchart to use the secret created by this parent chart for GitHub API credentials
  # by configuring the authSecret block.
  # githubConfigSecret: "github-runner-app-credentials" # This is superseded by authSecret configuration below

  authSecret:
    enabled: true  # Ensure the authSecret mechanism is used
    create: false # The secret is created by the parent chart, not this subchart
    name: "github-runner-app-credentials" # Use the parent chart's secret name

  # RBAC settings (usually defaults are fine)
  # rbac:
  #   create: true

  # ServiceAccount settings
  # serviceAccount:
  #   create: true
  #   name: ""

  # Metrics settings (Prometheus)
  # metrics:
  #   enabled: false
  #   port: 8080

  # Webhook server settings (for GitHub App webhooks, if you enable them later)
  # webhookServer:
  #   enabled: false
  #   port: 8080

  # Other controller settings as needed
  # syncPeriod: "1m"
  # leaderElection:
  #   enabled: true
  #   leaseDuration: "15s"
  #   renewDeadline: "10s"
  #   retryPeriod: "2s"

  # Important: Ensure the CRDs are installed. The actions-runner-controller chart
  # typically installs them. If managing CRDs separately, ensure they are applied
  # before this chart is deployed by ArgoCD.
  # crd:
  #   install: true # Default is usually true in the subchart

  # You can set the namespace for the controller if you want it different from the runners
  # namespace: actions-runner-system
  # However, if this chart deploys both, they will likely be in the same namespace
  # defined by ArgoCD for this application.
