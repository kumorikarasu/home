---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-deployment"
  labels:
    app: "{{ .Release.Name }}-tavern"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-tavern"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-tavern"
    spec:
      volumes:
      - name: appdata
        persistentVolumeClaim:
          claimName: appdata-pvc
      - name: "{{ .Release.Name }}-config"
        configMap:
          name: "{{ .Release.Name }}-config"
          items:
          - key: config.yaml
            path: config.yaml
    # - name: "{{ .Release.Name }}-volume
    #   persistentVolumeClaim:
    #     claimName: "{{ .Release.Name }}-pvc
      containers:
      - name: tavern
        image: registry.home.ryougi.ca/st
        ports:
        - containerPort: 8000
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: UMASK
          value: "000"
        - name: PORT
          value: "8000"
        volumeMounts:
        - mountPath: "/home/node/app/data/default-user"
          subPath: "st/bitcherry"
          name: appdata
        - name: "{{ .Release.Name }}-config"
          mountPath: /home/node/app/config/config.yaml
          subPath: config.yaml
      
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-service"
spec:
  selector:
    app: "{{ .Release.Name }}-tavern"
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-config"
data:
  config.yaml: |
    listen: true
    port: 8000
    whitelistMode: false
    whitelist:
      - 127.0.0.1
    basicAuthMode: false
    basicAuthUser:
      username: user
      password: password
    enableCorsProxy: false
    securityOverride: true
    autorun: true
    disableThumbnails: false
    thumbnailsQuality: 95
    allowKeysExposure: false
    skipContentCheck: false
    disableChatBackup: false
    requestOverrides: []
    enableExtensions: true
    extras:
      disableAutoDownload: false
      classificationModel: Cohee/distilbert-base-uncased-go-emotions-onnx
      captioningModel: Xenova/vit-gpt2-image-captioning
      embeddingModel: Xenova/all-mpnet-base-v2
      promptExpansionModel: Cohee/fooocus_expansion-onnx
    openai:
      randomizeUserId: false
    deepl:
      formality: default
    cookieSecret: qB8AMfFBjHIfh+ygvRktyI9YhIbYTvh6MJ+U/qKLEINeBdBbPbQ2oGQEnglcxQkDDT+90jbpwyi0QPaHHzmRGA==


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /
  name: "{{ .Release.Name }}-ingress"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - ryougi.ca
  rules:
  - host: st.kube.home.ryougi.ca
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "{{ .Release.Name }}-service"
            port:
              number: 80
  - host: st.kube.ryougi.ca
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "{{ .Release.Name }}-service"
            port:
              number: 80
  - host: st.home.ryougi.ca
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "{{ .Release.Name }}-service"
            port:
              number: 80
  - host: st.ryougi.ca
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "{{ .Release.Name }}-service"
            port:
              number: 80
