# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: "{{ .Release.Name }}-nexus-repository-manager"

# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: "{{ .Release.Name }}-nexus-repository-manager-data"
# spec:
#   accessModes:
#     - "ReadWriteOnce"
#   resources:
#     requests:
#       storage: "8Gi"

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: "{{ .Release.Name }}-nexus-repository-manager"
# spec:
#   type: ClusterIP
#   ports:
#     - port: 8081
#       protocol: TCP
#       name: nexus-ui
#     - port: 5000
#       protocol: TCP
#       name: docker
#   selector:
#     app.kubernetes.io/name: nexus-repository-manager
#     app.kubernetes.io/instance: {{ .Release.Name }}

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: "{{ .Release.Name }}-nexus-repository-manager"
# spec:
#   replicas: 0
#   strategy:
#     type: Recreate
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: nexus-repository-manager
#       app.kubernetes.io/instance: {{ .Release.Name }}      
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: nexus-repository-manager
#         app.kubernetes.io/instance: {{ .Release.Name }}
#     spec:
#       serviceAccountName: "{{ .Release.Name }}-nexus-repository-manager"
#       terminationGracePeriodSeconds: 120
#       containers:
#         - name: nexus-repository-manager
#           image: "sonatype/nexus3:3.58.1"
#           imagePullPolicy: IfNotPresent
#           securityContext:
#             allowPrivilegeEscalation: false
#             runAsNonRoot: true
#             seccompProfile:
#               type: RuntimeDefault
#             capabilities:
#               drop:
#                 - ALL
#           lifecycle:
#           env:
#             - name: INSTALL4J_ADD_VM_PARAMS
#               value: |-
#                 -Xms2703M -Xmx2703M
#                 -XX:MaxDirectMemorySize=2703M
#                 -XX:+UnlockExperimentalVMOptions
#                 -XX:+UseCGroupMemoryLimitForHeap
#                 -Djava.util.prefs.userRoot=/nexus-data/javaprefs
#             - name: NEXUS_SECURITY_RANDOMPASSWORD
#               value: "true"
#           ports:
#             - name: nexus-ui
#               containerPort: 8081
#             - name: docker
#               containerPort: 5000
#           livenessProbe:
#             httpGet:
#               path: /
#               port: 8081
#             initialDelaySeconds: 30
#             periodSeconds: 30
#             failureThreshold: 6
#             timeoutSeconds: 10
#           readinessProbe:
#             httpGet:
#               path: /
#               port: 8081
#             initialDelaySeconds: 30
#             periodSeconds: 30
#             failureThreshold: 6
#             timeoutSeconds: 10
#           volumeMounts:
#             - mountPath: /nexus-data	
#               name: nexus-repository-manager-data
#       securityContext:
#         fsGroup: 200
#         runAsGroup: 200
#         runAsUser: 200
#       volumes:
#         - name: nexus-repository-manager-data
#           persistentVolumeClaim:
#             claimName: "{{ .Release.Name }}-nexus-repository-manager-data"

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: "{{ .Release.Name }}-nexus-repository-manager"
#   annotations:
#     nginx.ingress.kubernetes.io/proxy-body-size: "0"
# spec:
#   ingressClassName: nginx
#   tls:
#     - hosts:
#         - nexus.home.ryougi.ca
#         - docker.home.ryougi.ca
#   rules:
#     - host: nexus.home.ryougi.ca
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: "{{ .Release.Name }}-nexus-repository-manager"
#                 port:
#                   number: 8081
#     - host: docker.home.ryougi.ca
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: "{{ .Release.Name }}-nexus-repository-manager"
#                 port:
#                   number: 5000
